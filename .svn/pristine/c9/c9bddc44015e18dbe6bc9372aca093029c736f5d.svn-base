/*
 * Pamaldeep Singh Dhillon
 * TetrisFrame.java
 * 
 * TCSS 305 - Autumn 2015
 * Assignment 6 - Tetris
 */
package view;

import java.awt.BorderLayout;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.awt.event.WindowEvent;

import javax.swing.ButtonGroup;
import javax.swing.JFrame;
import javax.swing.JMenu;
import javax.swing.JMenuBar;
import javax.swing.JMenuItem;
import javax.swing.JOptionPane;
import javax.swing.JRadioButtonMenuItem;

import model.Board;

/**
 * Puts all components together into a JFrame.
 * 
 * @author Pamaldeep Dhillon
 * @version 2 December 2015
 */
public final class TetrisFrame {
    /** A ToolKit. */
    private static final Toolkit KIT = Toolkit.getDefaultToolkit();
    /** The Dimension of the screen. */
    private static final Dimension SCREEN_SIZE = KIT.getScreenSize();
    /** Width for the Tetris Board. */
    private static final int BOARD_WIDTH = 10;
    /** Height for the Tetris Board. */
    private static final int BOARD_HEIGHT = 20;
    /** JFrame that will contain all components. */
    private final JFrame myFrame;
    /** Board on which game will be played. */
    private final Board myBoard;
    /** Panel that will draw the board onto the screen. */
    private final TetrisPanel myTetrisPanel;
    /** Panel that shows the score and next piece. */
    private final EastPanel myEastPanel;
    /**
     * Constructor that initializes fields.
     */
    public TetrisFrame() {
        myFrame = new JFrame("Tetris");
        myBoard = new Board(BOARD_WIDTH, BOARD_HEIGHT);
        myTetrisPanel = new TetrisPanel(myBoard);
        myEastPanel = new EastPanel(myBoard);
        myBoard.addObserver(myTetrisPanel);
        frameSetUp();
        myFrame.setVisible(true);
    }
    /**
     * Sets up the frame by adding the menubar, keylistener, panels. Also starts the timer
     * and sets the location for the GUI.
     */
    private void frameSetUp() {
        myFrame.setResizable(false);
        myFrame.addKeyListener(new TetrisKeyListener(myBoard));
        myFrame.add(myTetrisPanel, BorderLayout.CENTER);
        myFrame.add(myEastPanel, BorderLayout.EAST);
        myFrame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setUpMenuBar();
        myFrame.pack();
        myFrame.setLocation(SCREEN_SIZE.width / 2 - myFrame.getWidth() / 2,
                            SCREEN_SIZE.height / 2 - myFrame.getHeight() / 2);
        final TetrisTimer tTimer = new TetrisTimer(myBoard);
        tTimer.start();
    }
    
    /**
     * Sets up the menubar for the GUI and adds it to the frame.
     */
    private void setUpMenuBar() {
        final JMenuBar mb = new JMenuBar();
        final JMenu fileMenu = new JMenu("File");
        final JMenu optionsMenu = new JMenu("Options");
        final JMenu helpMenu = new JMenu("Help");
        fileMenu.setMnemonic(KeyEvent.VK_F);
        optionsMenu.setMnemonic(KeyEvent.VK_O);
        helpMenu.setMnemonic(KeyEvent.VK_H);
        
        //Set up file menu
        final JMenuItem exit = new JMenuItem("Exit");
        exit.setMnemonic(KeyEvent.VK_X);
        exit.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(final ActionEvent theEvent) {
                myFrame.dispatchEvent(new WindowEvent(myFrame, WindowEvent.WINDOW_CLOSING));
            }
        });
        fileMenu.add(exit);
        
        //Set up options menu
        final ButtonGroup sizeGroup = new ButtonGroup();
        final JMenu windowSize = new JMenu("Window Size");
        windowSize.setMnemonic(KeyEvent.VK_W);
        final JRadioButtonMenuItem small = new JRadioButtonMenuItem("Small");
        small.setMnemonic(KeyEvent.VK_S);
        small.setSelected(true);
        small.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(final ActionEvent theEvent) {
                setNewWindowSize(0);
            }
        });
        sizeGroup.add(small);
        final JRadioButtonMenuItem medium = new JRadioButtonMenuItem("Medium");
        medium.setMnemonic(KeyEvent.VK_M);
        medium.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(final ActionEvent theEvent) {
                setNewWindowSize(1);
            }
        });
        sizeGroup.add(medium);
        final JRadioButtonMenuItem large = new JRadioButtonMenuItem("Large");
        large.setMnemonic(KeyEvent.VK_L);
        large.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(final ActionEvent theEvent) {
                setNewWindowSize(2);
            }
        });
        sizeGroup.add(large);
        windowSize.add(small);
        windowSize.add(medium);
        windowSize.add(large);
        optionsMenu.add(windowSize);
        
        //Set up help menu
        final JMenuItem controls = new JMenuItem("Controls...");
        controls.setMnemonic(KeyEvent.VK_C);
        controls.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(final ActionEvent theEvent) {
                JOptionPane.showMessageDialog(null, "Rotate: W\nLeft: A\nDown: S\nRight: D"
                                            + "\nDrop: Space", "Controls",
                                            JOptionPane.PLAIN_MESSAGE);
            }
        });
        helpMenu.add(controls);
        final JMenuItem about = new JMenuItem("About...");
        about.setMnemonic(KeyEvent.VK_A);
        about.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(final ActionEvent theEvent) {
                JOptionPane.showMessageDialog(null, "TCSS 305 Tetris, Autumn 2015"
                                            + "\nAuthor: Pamaldeep Singh Dhillon", "About ",
                                            JOptionPane.PLAIN_MESSAGE);
            }
        });
        helpMenu.add(about);
        
        //add menus to menubar and menubar to frame
        mb.add(fileMenu);
        mb.add(optionsMenu);
        mb.add(helpMenu);
        myFrame.setJMenuBar(mb);
    }
    
    /**
     * Changes the size of the TetrisPanel, then repacks the frame and changes the location
     * of the GUI so that the resized frame is still in the center of the screen.
     * 
     * @param theSize Integer that correlates to a size and gets passed to the TetrisPanel.
     */
    private void setNewWindowSize(final int theSize) {
        myTetrisPanel.setNewSize(theSize);
        myFrame.pack();
        myFrame.setLocation(SCREEN_SIZE.width / 2 - myFrame.getWidth() / 2,
                            SCREEN_SIZE.height / 2 - myFrame.getHeight() / 2);
    }
}
